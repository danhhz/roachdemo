// Code generated by go-bindata.
// sources:
// assets/css/default.css
// assets/css/demo.css
// assets/js/demo.jsx
// assets/templates/cluster.html
// assets/templates/demo.html
// assets/templates/error.html
// assets/templates/layout.html
// assets/templates/log.html
// assets/templates/node.html
// assets/templates/notfound.html
// assets/templates/run.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssDefaultCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xca\x4f\xa9\x54\xa8\xe6\xe2\x2c\x48\x4c\x49\xc9\xcc\x4b\xd7\x2d\xc9\x2f\xb0\x52\x30\x37\x28\xa8\xb0\xe6\xaa\xe5\xca\x30\x02\x49\xe5\x26\x16\xa5\x67\xe6\x41\x64\x0c\xac\xe1\xfc\xa4\xfc\x92\x92\xfc\x5c\x2b\x05\x23\x88\x62\x40\x00\x00\x00\xff\xff\x28\xaf\x7a\xd0\x49\x00\x00\x00")

func assetsCssDefaultCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssDefaultCss,
		"assets/css/default.css",
	)
}

func assetsCssDefaultCss() (*asset, error) {
	bytes, err := assetsCssDefaultCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/default.css", size: 73, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCssDemoCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\xd1\x0a\x83\x30\x0c\x05\xd0\xf7\x7e\x45\x60\xcf\x8a\x8c\xa9\x43\xbf\x26\x36\xa5\x96\xd9\x46\x6a\x65\x8e\xe1\xbf\x8f\x66\x4e\x46\x1e\x73\xef\x3d\x03\xd3\x0b\xde\x0a\x60\x46\x22\x17\x6c\x31\x70\x4a\xec\x3b\xb8\x55\xf3\xd6\x2b\x00\xcd\x13\xc7\x0e\x2e\x35\xe6\xeb\xd5\xae\x14\x4a\xe1\xf7\x68\xaf\xba\xa9\x6a\x79\x94\x1a\x23\xaf\x8b\x99\x24\xe0\x31\x5a\x17\xce\xc1\x46\x06\xf7\xbf\x50\xe9\x92\xf1\x12\x1d\x8d\xb3\x63\xca\xe8\xa1\x0e\xa8\x1f\x36\xf2\x1a\xa8\x38\x9d\xb6\xfd\x22\x81\xc9\x2c\x52\xcb\xc6\x56\x3c\x1d\xa5\xb1\x83\x7b\x75\x00\x9f\x00\x00\x00\xff\xff\xc9\xab\xe8\xa3\xd3\x00\x00\x00")

func assetsCssDemoCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssDemoCss,
		"assets/css/demo.css",
	)
}

func assetsCssDemoCss() (*asset, error) {
	bytes, err := assetsCssDemoCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/demo.css", size: 211, mode: os.FileMode(420), modTime: time.Unix(1497038980, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsDemoJsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x7b\x8f\xdb\x36\xf2\x7f\x77\x3f\xc5\x14\xbf\xa2\x92\x10\xaf\xbc\x49\xba\xf8\x01\xeb\x47\xb0\xd9\xb4\x68\xee\xda\x24\x97\xe4\x7a\x38\x04\x41\x41\x8b\x63\x8b\x0d\x4d\xea\x48\xca\x5e\x63\xeb\xef\x7e\x20\x29\xc9\x94\x64\x7b\x37\x8f\xbd\xb6\xfb\xc7\x5a\xa2\x86\xf3\xe2\xbc\x38\xe4\x70\x08\x57\xb2\xd8\x28\xb6\xc8\x0d\x3c\x3a\x7b\xf8\xff\xf0\x8c\x08\x86\x1c\x7e\x24\x4a\x31\x2d\x45\x0a\x97\x9c\xc3\x6b\xfb\x5d\xc3\x6b\xd4\xa8\x56\x48\xd3\x93\x93\x8c\x13\xad\xe1\xb2\x28\x00\xaf\x0d\x0a\x6a\x3f\x92\xcc\xa4\x57\x72\x59\x48\x81\xc2\xc0\xcd\x09\x40\x26\x85\x36\xaa\xcc\x8c\x54\x71\xa1\x64\xa1\x13\x37\x0c\xa0\xcb\x02\xeb\xa1\x91\x1b\x31\x39\xd3\xe9\xaf\x85\xd4\xe6\x6f\x6f\x5e\xbe\x80\x49\x67\x20\x9d\x31\x41\x63\x3b\x16\xc2\x6b\x43\x0c\xc2\xa4\x42\x0a\x20\x24\x45\x7d\x01\xef\xde\x0f\xdc\xc0\xd6\x82\x6e\x47\x27\x8e\x93\x8a\xaf\x7f\x31\xce\x7f\x96\xa5\x30\x71\xcd\x4b\x9b\x50\x1c\x09\x29\x8b\x28\xd9\x4d\xdd\x7d\x2a\x88\xc9\xeb\x59\x73\x34\x59\xee\x46\x06\x0d\xf9\x25\x9a\x5c\xd2\x0b\x88\x5e\xbd\x7c\xf3\x36\x1a\x54\xa3\x39\x12\x8a\x4a\x5f\x80\xc0\x35\xfc\xe8\x5f\x62\x3f\xe5\xab\xaf\xa2\x2b\x29\x0c\x0a\x73\xfa\x76\x53\x60\x74\x01\x11\x29\x0a\xce\x32\x62\x98\x14\xc3\xdf\xb4\x14\x0d\x9a\x6d\x52\x09\x95\xa4\x26\x47\x11\x2b\x98\x4c\x41\xa5\x16\x26\x4e\x92\x0a\x28\xf8\x54\x33\x05\xb0\x22\xca\x6b\x06\x26\xf0\x72\xf6\x1b\x66\x26\x5d\x11\x5e\xa2\x8e\x55\xea\xc6\x93\x06\x14\x20\x5d\x92\x22\x16\x0e\x01\x08\xa7\xe0\xd2\xce\x7b\x21\x29\x56\x6f\xb1\x48\x46\xa0\xd0\x94\x4a\x80\x80\x6d\x6b\xb2\x96\xca\xc4\x31\x19\xc0\x2c\xb1\x28\x0a\xa2\x34\x3e\x17\x26\x26\xa9\x20\x4b\x4c\xe0\x74\x37\x34\xf3\x43\xd5\x72\xee\x96\x14\xcd\x1b\xbb\xaa\xf1\x4d\x80\xb7\x5a\x57\xf7\x33\x68\xc6\xb7\xcd\xdc\x86\x89\x34\x23\x76\x59\x50\x39\x15\x58\xf3\x93\x1c\x53\x54\x4a\x2a\x3b\x98\x04\xcb\xaa\x50\x50\x54\x8d\x15\x70\x34\x30\x17\x81\x2d\x11\x4a\xad\xd0\x17\x10\x3b\x51\xba\x56\x32\x24\x94\x46\x49\xcd\x4c\x41\x4a\x8d\x1e\xdc\x4a\xb5\x77\x82\xe5\x7e\x18\xc1\x03\x0f\xf1\x00\xa2\xa1\x9b\xd5\x41\x72\xc9\xf9\x41\x92\x0e\x80\x70\xbe\x9b\xa2\x50\x97\xcb\x8f\x27\xec\xa7\x75\xd1\x1c\x23\xed\x21\x5a\xb4\x29\x6a\xa3\xe4\xe6\xa3\x89\x6b\x63\xfd\xab\x83\xe5\x18\x6d\x3b\x21\xa0\xbc\x3d\xf1\x2c\x3b\x03\x8c\x2b\x34\x63\xca\x56\xd3\xc6\x32\xc6\x82\xac\xc0\x85\xa8\x17\x64\x89\x93\x48\x90\xd5\xcc\x3a\x81\xfb\x39\xa5\x38\x27\x25\x37\xf5\xab\xb5\x6a\x96\x9d\x5a\xae\x40\x49\xee\xc1\xd9\xc2\xb9\x60\x34\x0d\xac\xd0\xd2\x08\xb1\x66\x52\x18\xc2\x04\xaa\xd3\x39\x2f\x19\x6d\xc1\xf6\xa1\x2b\x6a\x3e\x1a\x74\x60\x01\xc6\x64\x0f\xec\x4c\x11\x41\x23\xc8\x15\xce\x27\xd1\x30\x9a\x5e\xc9\xec\x83\x92\x24\xcb\x9f\x3d\x85\x67\xb8\x94\xe3\x21\xe9\xd0\x1c\xb6\xd4\xd0\x1b\x18\x0f\x05\x59\x4d\x4f\x4e\x3e\x45\xa2\xf1\x15\x51\xb2\xd4\xc8\x61\x2e\x26\x37\x73\xb1\xf5\xee\x38\xb9\xd9\x45\x62\x1f\x4d\xb6\x30\x6c\xcd\x7b\xe1\x42\xcf\xc7\x4c\x6a\x71\x1d\xbc\xd4\xde\x6b\x1d\xd8\x27\x20\x8f\xfb\x58\x0a\xea\xb8\x79\xd7\x6c\x0c\x99\x71\x0c\x55\xe0\x07\xdc\xff\xd3\x99\x54\x14\x15\xd2\xea\x35\x97\x2b\xac\x22\x69\xa0\x99\xb1\xb1\x4b\xda\x92\xd8\xa8\xce\xb2\x98\x1c\xd6\x8c\x9a\x7c\x12\x9d\x9f\x15\xd7\xd1\xd4\xb2\x3d\x1e\x9a\xfc\x20\xd8\xc3\x33\x07\xe7\x22\xe1\x51\x40\x52\x1a\x19\x4d\x2f\xe9\x92\x09\xf8\xe7\xf3\xe3\x38\x3d\xed\x9f\xe4\x42\x1f\x85\x7b\xe4\x69\x5f\x66\xd6\x01\x7a\xa0\xe3\x61\x28\x9d\xfd\xda\x92\x7e\x6c\x66\x92\x6e\xda\xb8\xfd\x62\xbb\x64\xef\x17\xdb\xe7\x18\x49\x5d\xc4\x70\xf6\xe1\xcc\x23\x00\xb3\x96\x72\x93\xa6\x0e\xdc\x9a\x46\xb2\x3d\xae\x5f\x3a\x1d\xcf\x4a\x63\xa4\xe8\xb8\x55\xb0\xb0\x33\x23\x60\x66\xc4\xe9\xb5\x76\x3f\x85\x62\x4b\xa2\x36\x51\x67\x82\x14\x57\x9c\x65\x1f\x3a\xcc\xa4\x55\x32\xd8\xb6\xa0\xa7\x97\x94\x82\x5f\x4a\x4f\x7c\x3a\x1e\x1a\xda\x63\x0d\x32\xc9\xdf\x14\x44\x4c\xa2\xef\xfa\x6e\xbf\x97\xeb\x4f\xe0\x3b\xe0\x3c\x88\xa2\x0d\xff\x75\x6a\x89\x13\xd8\xf6\x66\x52\xa6\xad\x7d\xd3\x49\x7f\xa1\xb4\x5c\xa2\xaf\x06\x76\xb5\xc0\x64\x02\xd1\xeb\x52\x08\x26\x16\x51\x02\x4f\x20\x8a\xe0\x02\xa2\x1a\x49\xd4\xc5\x3f\x7d\x65\x69\xdb\x32\xb2\x51\xd3\x1f\xa4\x84\x26\xcb\x7d\x29\x2d\x38\xc9\xe8\x9d\x94\xf0\xda\xd1\xfe\x33\x68\x61\x97\x70\x6f\x51\xc3\xd7\x3d\x3d\xe0\x0a\xd5\x66\x9f\x22\x9e\x79\x9c\x77\xd4\x45\x05\x7d\x58\x19\x5d\x37\xea\xc5\x9c\x30\xc6\x8c\x87\x2e\x3a\x87\x19\xa2\x93\x20\x8e\xe6\x07\x9f\xfd\xa1\x2e\x6d\x25\xc5\x3a\x55\xb0\x39\xb8\xf7\x54\x95\x02\xbe\xfd\x16\xea\xe7\xf4\x6a\x49\xbb\xef\xe9\x2b\x25\x33\xd4\xfa\xd0\x78\xfa\x8a\x51\x98\xc2\x59\xd2\x94\x97\x21\x76\xef\x9e\x34\x09\x6a\xf6\x2a\x4f\xd5\x26\x56\xd7\xb9\x27\xed\xaf\xb5\x1b\xf6\xeb\xa2\x60\x49\x9a\x8a\x37\x10\x15\xdf\xca\xab\xda\xae\x62\x37\xd0\xec\xcc\xd6\xcc\x64\x39\xb4\x07\x33\xa2\x71\x47\xed\xa2\xc3\x85\x2e\x33\x2b\x63\x34\x0a\x60\x2b\xbe\xbb\xa0\x6b\xa2\x1c\x8a\x10\x74\xc7\x69\x17\x9a\x12\xb1\x40\x55\x01\xb7\xc5\x8b\x0e\x16\xf2\xbd\x0c\xaf\x02\x17\xba\x69\xf6\x31\x2d\x0d\x04\x96\xee\x0d\x21\xd9\x86\x29\x8d\x4e\xc7\xc4\x57\x61\x37\x41\x41\x1b\xba\x07\x59\xe2\x76\x7a\xd3\x1d\xb1\xf5\x59\xdb\x96\x2d\xae\x9b\x1e\xb5\x6d\x1f\xa8\x21\x18\x00\x97\x8a\x6f\xc1\x10\xb5\x40\x33\x89\x7e\x9d\x71\x22\x3e\x44\xd3\x2e\xc0\xed\x34\xad\x39\x3f\x69\xf4\x03\xbd\xe2\xd9\x8d\x90\x3b\x27\xd2\xaa\x9a\xee\x46\xa1\xdb\xd4\xe5\xf7\x21\xa5\xe8\x7e\xb3\xee\xc0\x68\xb5\x51\xa0\xb2\x34\x51\x4f\xe6\x76\x12\x1e\xeb\x82\x88\x90\xbf\x05\xdf\x14\x39\xcb\xa4\x80\xe6\xe9\x74\xce\x38\x46\xd3\xf1\xd0\xc2\x4e\xc1\x23\xee\x57\xcf\x7f\x12\xa1\x51\xa9\xfb\x11\x1a\x95\xea\x08\xdd\xd9\x1f\x24\x36\x70\x47\x7b\xcc\x31\x9c\xb2\x27\x4f\x7d\x64\x8e\xba\xbd\x54\xb1\x6e\x1a\x77\x94\x97\xb4\x13\xc9\xde\x7c\xbd\xaf\x46\x39\x9e\x91\x7c\x79\xb2\x2f\x0f\xdd\xb7\xa0\xbb\xbd\xfb\xe7\x4a\x5a\x05\xdb\x5b\x04\xf5\x25\xc8\x1f\x21\x69\xd0\x29\xf8\x0c\x51\xbf\x6e\x57\x1a\xb7\x48\x5b\x01\xf6\xc5\x0d\x8d\x7b\x57\x58\xf4\x0a\x87\x66\xb7\x7b\x87\xe2\xe1\x57\xeb\xef\x57\xb2\x14\xe6\x17\xc2\x19\x75\x9d\x83\xd8\x37\xab\x60\xc9\xc4\x00\x96\xe4\xba\xd5\x67\x62\xdc\xd8\x7d\xe5\x8b\xaa\x29\xe7\xab\x2b\x3f\xda\x29\xaf\x3a\x42\x57\x1d\xaf\x15\x51\x36\xcf\xc1\x04\xde\xbd\x1f\x35\xc5\x4a\x0b\x6d\xca\x51\x2c\x4c\x0e\x63\xcb\x41\x02\x37\x16\x3e\x2d\x4a\x9d\xc7\xd1\x6b\xfc\x4f\xc9\x14\x6a\x20\x06\x38\x12\x6d\xc0\x86\x23\xbb\x83\x7c\x00\x51\xc5\x4c\x54\xd7\x86\x07\x11\x4f\x27\x95\x58\xfb\x30\xcf\x71\x8d\x0a\x4c\x4e\x84\xc7\x4d\xae\xf7\xe1\xae\x52\xb5\x42\xe3\xb5\xdf\x56\x68\xe5\xbf\x5f\x5c\xa5\xed\x0d\xcc\xfd\x2b\x54\x79\x52\xf7\xaa\xd8\x03\x34\x8e\x2b\xd8\x87\x8d\xfb\xd1\x6f\xbd\x35\xba\x7f\xf5\xfa\xda\xf9\x5e\xb5\xbb\x9f\x44\x57\xb9\xfb\x7b\xca\xcc\xe0\xd2\x2a\xec\x5d\x15\x72\x76\x25\x7e\x8e\x84\x72\x26\xf0\xc2\x3a\xf8\x52\x46\xbb\xc6\xb6\xc1\x6b\x73\xd1\xcc\x70\x81\xaa\x68\x2a\xc2\x28\x37\xa6\xd0\x17\xc3\xe1\x7a\xbd\x4e\xb3\xba\x23\xc8\xc9\x4c\xa7\x99\x5c\xb6\xbb\x84\x36\xdb\x03\xd3\x40\x20\xe3\xb2\xa4\xa7\x82\x18\xb6\x42\x78\xf3\x8f\x9f\x80\x12\x43\x66\xb6\xfe\x9e\x4b\x05\xb3\x92\x71\x6a\xed\x67\xc1\xe5\x8c\xf0\x01\xe8\x8c\xf0\xaa\x33\x26\x4b\x0a\x1a\xd5\x8a\x65\xa8\xad\x6a\x0c\xe8\x52\xad\x2c\x1a\x1b\x78\xb5\x41\xa5\xd3\xf1\xb0\x98\x0e\xda\xec\xbe\xcd\x99\x06\x8a\x4b\x09\x6b\xc2\x3f\x68\xd8\xc8\x12\x4c\xae\x64\xb9\xc8\x81\x80\x66\xcb\x82\xa3\xfb\x2e\xb4\x51\xce\xfc\x40\xce\x21\x97\x6b\x08\xbb\x9c\x0a\xfd\x69\x88\x5d\x7c\x41\x2d\x45\xa3\xd8\xac\xb4\xef\x56\x80\x0e\xe1\xf7\xbb\x47\xe2\xba\x57\x17\x10\xbd\xc0\x6b\x13\x75\xc7\x7f\x10\x17\x7e\xf7\xa5\x93\xf6\x51\xc9\xb6\x39\x6d\x19\x1c\x5b\xaf\x37\x86\x28\x03\x65\x01\x8f\xab\x76\xe0\x2d\x6b\xf7\xb2\x40\x01\x26\x47\xa8\x1b\x75\x56\x56\x29\xd0\xfe\x6c\x64\x59\x1f\xcf\x58\x11\x33\x9b\x46\xe1\x17\x86\xeb\x6a\x90\x33\x6d\x40\xfa\xe9\xee\x9c\x2e\x85\x7f\xcb\x32\xe2\x1c\x34\xa2\x5f\x10\xc2\xb9\xd5\x2d\x62\x8d\x47\xa1\x9b\x86\x34\x85\x4b\xeb\xbb\x4a\x9b\x81\x47\xe0\xf5\x09\x99\x4d\x56\xb0\x66\x9c\xc3\x0c\x81\x4b\x6b\xf6\xd6\x10\xfc\xfc\x47\x8e\x93\xc7\x29\xfc\x82\x6a\x03\x5a\x4a\x71\x6c\x36\xa3\x28\x0c\xcb\x08\x07\x92\x29\xa9\x75\x97\x9d\x01\x30\x41\xdd\x91\x96\x58\xec\xf8\xb5\xcb\x07\xcc\x8b\x95\xf1\xd2\xda\x11\xe4\x44\xc3\x0c\x51\xec\x96\x9d\xc2\x63\x30\x6c\x89\x7a\x64\x01\x15\x46\xce\x96\x65\xb1\xb1\x9a\x73\xed\x08\x28\x18\x66\x4e\x91\x0e\xa3\x14\x80\x24\xcb\xfd\x26\xdc\x5a\xc7\x61\xe3\x38\x68\x04\x5f\x28\x49\xfb\x3f\xab\xd5\xd8\xc6\x3f\x06\x13\xd8\x1b\x91\x7e\xff\x1d\xce\x46\xc0\x60\x0c\x8f\x47\xc0\x1e\x3c\xb0\xb1\x69\x6f\xf7\x31\x4e\x46\xad\x86\xcd\xc1\xee\xd6\xa8\x6f\xcf\x36\x06\xd7\x71\xfe\x07\xa1\xdb\x16\x1a\x68\xa1\x2e\x7b\xd2\x63\x35\xcd\xd9\x00\x4a\x41\x71\xce\x04\xd2\x64\x8f\xfb\x1d\x77\x9e\x4b\x4a\xc1\xac\x25\x2c\xa5\xc2\xbb\xb9\xcf\x53\x92\x7d\xa8\x6d\xa5\xf6\xa0\x81\x75\x9c\x96\x17\x38\x03\x71\xb6\x2f\xe4\x1a\xce\x03\xf7\x71\x7e\xb0\x20\x36\xad\x91\x4f\x70\x87\xef\x9c\x3b\x9c\xa7\xf0\xb4\x34\x30\xc3\xcc\xf5\x33\x6d\x3c\xcb\x72\x22\x16\x48\x1d\xaa\xfa\x50\xa9\x36\x5d\x1b\xd0\xe6\x24\x33\x52\x81\x91\x70\x3e\x80\xd5\x27\xfb\xd2\xf9\x97\xf0\xa3\x73\xef\x47\x7f\x39\x9f\x38\xff\x8b\xf8\xc4\xe3\x01\x9c\x7f\xbc\x2f\xf8\xde\x38\x71\x8a\xbc\x7b\x96\xf2\x8b\xe1\x0f\x50\xee\x5e\xe9\xbe\x7b\xf8\x7e\x74\x50\x53\xbb\x5d\xb7\x8b\x9c\x6e\x6b\xf6\xc5\x54\x76\xb0\x92\x7f\xfc\x59\x81\xe4\xa9\xb2\x9e\xc0\x0c\xcc\x48\xf6\x61\xbf\xf6\x7a\x8a\xbb\x7f\xfb\x38\x28\xec\xa3\xfd\xc2\x1e\x41\x75\xa8\x40\x7f\xf8\x59\x6a\xfb\xbb\x8d\x35\xff\x23\x93\x7b\x74\xc4\xe4\xc2\xae\xc0\x5f\xc7\xe8\x5e\x63\xc1\x49\x86\xd6\xec\xd6\xcc\xd8\x5a\x56\x54\xa5\xda\x27\x59\xe0\x2e\x8c\x7d\x6c\x0d\x7a\x69\x83\xbf\x14\x78\x5b\xf2\xfc\x01\x91\xc3\xdc\x56\x63\x46\x82\xce\x4b\x03\x54\xae\x85\x63\x03\x0a\x25\x17\x8a\x2c\x5d\x7e\x53\xb8\x94\x2b\xf4\xb9\xcc\xe5\x14\x03\x0b\x14\xa8\x6c\xf6\x38\x54\x67\x57\x1c\xd6\x7b\x3a\xbb\xd5\x79\x77\xf6\x3e\xb5\xe2\xaf\xac\xa1\x18\x55\xe2\xe8\x24\xdc\x2d\x85\xf7\x35\x1a\x7c\x8c\x4e\xa2\xe5\xa6\x5e\xbe\xa8\x75\x23\xa1\x6e\xc3\x68\xce\x28\xee\x7a\x4e\x96\xc5\x53\x26\x0c\xaa\x15\xe1\x93\x68\x4e\xb8\xee\x7e\x5d\x2b\x52\xf4\xbe\x04\x7d\x20\xc9\xf7\x11\x3a\xad\x92\xac\x54\xba\x75\x5a\x7b\xe3\xa4\x73\x27\xd7\xb1\x7d\x1c\x00\xa3\xd7\xbd\xc5\x6d\xe4\x1c\x73\xe6\xb9\xa8\xdb\xb8\xff\x17\x0a\xe8\xbe\x38\x89\x4e\x8d\x9c\xdc\x30\x7a\xbd\x0d\x0f\x29\x2c\xfe\x5a\x89\x4f\x20\xf2\x4f\x91\xef\xcd\x4e\xc7\x43\xce\x42\xc6\xb6\x41\x0b\x6d\x3c\x94\x3c\x90\xb0\x7b\xbb\x63\x27\xa2\x40\x55\x5f\x76\xb1\x05\xd2\x4c\x5e\x1f\x12\xd6\x3e\xb9\x63\xfa\x9a\xfb\xe7\x76\x20\xbc\xc5\x11\x9c\x10\xfa\x43\x7b\x3b\xa5\x73\x68\xdf\xbd\x87\xd2\xba\xed\xc2\x71\x6e\xa0\x61\x2e\x93\xc2\x28\xc9\xeb\x6b\x2f\x2d\xbd\x79\x8e\x7d\x47\x2f\xd4\xe2\x24\x2a\x14\xae\xda\xd7\x55\xee\xd2\x21\xcf\x72\x5c\x29\x29\x4e\x2d\x07\x11\x10\xc5\xc8\x69\xce\x28\x45\x31\x89\xac\xe9\x36\xcd\xf3\x63\x78\xb5\x3a\x95\x82\x6f\xa2\xe9\x2b\x85\x2b\x26\x4b\xdd\x9d\xd3\x6a\xb9\xb7\x25\xf7\xf7\x2e\x3f\x53\x74\x61\x77\xb8\x9f\x2c\xba\x63\xe1\xb3\x65\xb7\xbb\xec\x23\x72\x1f\xbd\xc3\xd3\x32\xac\x8f\xb8\xca\x63\x0b\xc8\x39\x61\xbc\x54\xae\x16\xad\x3b\x4b\x61\x87\xb9\x95\x37\x6c\x51\xf9\xee\x7d\x92\xce\xa5\xfa\x9e\x64\x79\x3c\x17\xa1\xf7\x06\x98\xea\xc7\x34\x93\x22\x23\x26\x9e\x8b\xb8\x6b\xe8\x49\x85\xac\x3a\x9a\x4c\x0e\x85\xb8\xd0\xab\x03\x1c\x3b\xdf\x76\xee\x15\x38\xb8\x7d\x8f\xb6\x47\x7c\xb8\xbe\xa1\x75\xfc\x66\x5a\x63\x51\xa4\xe8\x5d\x63\x03\x18\xe7\x0f\x5b\x27\x82\x75\x56\xd9\x8e\x87\xf9\xc3\xc3\x77\x77\x6c\x7a\x69\xb7\xeb\x6f\x1a\x55\xd9\x50\x51\xbd\x58\xad\xc6\x2d\x30\x97\x87\x6a\xd8\x6d\x6b\x07\xe2\x4c\xa2\x73\x08\x30\x2e\xee\x7e\x9b\x87\x2f\xee\x74\x9b\xa7\x9f\x86\xfd\x1f\x9b\xb7\xec\xa5\xce\xdb\xc9\x1e\xd0\x56\xe6\xae\x01\xfb\x86\x31\xea\x4d\xec\xdf\xb1\xf8\x26\x6e\xf9\x76\x92\xd6\xeb\x15\x7b\x67\xee\x21\xd9\x76\x71\xec\xce\x49\x9a\x15\xa8\xfb\x9b\x70\x66\xed\xaa\x39\x14\xf1\x59\xa3\x33\x7d\xda\x35\x46\x29\xe0\x49\x5f\x3e\x3b\xf7\x75\x29\xa2\x6d\x70\xc1\xa9\x38\x7a\xbd\xf0\xf6\x7b\x7b\xdf\xc4\x54\x66\xe5\x12\x85\x49\x52\x85\x84\x6e\xe2\x79\x29\x3c\xb5\x38\xb1\x5a\x77\x9e\xff\xec\xe5\xcf\x69\xe5\xee\xe3\xcb\xa2\x80\xe1\x74\x00\xf5\xbc\x74\x81\xe6\x7b\x8e\xf6\xf1\xe9\xe6\x39\x8d\x23\x25\xa5\x89\x92\x64\x74\xb2\x4d\x46\x27\xff\x0d\x00\x00\xff\xff\x77\xd3\xa6\x36\xd2\x2e\x00\x00")

func assetsJsDemoJsxBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsDemoJsx,
		"assets/js/demo.jsx",
	)
}

func assetsJsDemoJsx() (*asset, error) {
	bytes, err := assetsJsDemoJsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/demo.jsx", size: 11986, mode: os.FileMode(420), modTime: time.Unix(1497039884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesClusterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xdf\x6b\xeb\x36\x14\x7e\xef\x5f\x71\xa6\x5b\x48\xf2\x60\xbb\x77\x5b\xc7\x48\x9c\x40\xd9\x5e\x06\xa5\x8c\x96\xfb\x34\xc6\x50\x2c\xd9\x16\x55\x24\x4d\x3a\x6e\x13\x42\xfe\xf7\x21\x59\x89\xf3\xc3\x69\xd3\x72\x47\xa1\x8e\xa4\xef\x7c\xe7\xd3\xa7\xa3\x1f\xb9\xc3\x95\xe4\xb3\x2b\x00\x64\x50\xff\x0c\xeb\x2b\x00\x80\x05\xb5\x95\x50\x63\xb8\x99\x5c\x01\x6c\xae\xda\x51\x63\x79\x1c\x9e\xd3\xe2\xb9\xb2\xba\x51\x6c\x0c\x4a\x2b\x3e\x69\x7b\xb5\x65\xdc\x76\x3d\x6d\x5c\xcd\x29\x03\xac\x7b\x22\xbf\x94\xb7\xfe\x6f\x07\x4d\x17\x74\x59\x73\x51\xd5\xb8\x97\x4a\xbf\x70\x5b\x4a\xfd\x9a\xac\xc6\xe0\x0a\xab\xa5\x9c\x44\x85\xcb\xa4\x05\x8f\xe1\xd7\x1b\xb3\xec\x58\x94\x66\x3c\xd1\x0d\x9a\x06\x0f\x66\x93\xa0\x36\x63\xb8\xdd\x87\x22\x9d\x4b\x0e\x68\xc7\xb5\x4f\x13\xd1\x45\x63\x9d\xb6\x63\x30\x5a\x28\xe4\xb6\x43\x1b\xaa\xb8\x84\xd4\x58\x5d\x59\xee\x5c\x0f\xf9\x2f\x2d\x79\x67\xc5\x57\xb3\x04\xa7\xa5\x60\xf0\x85\x52\xda\x51\x49\x5d\x3c\x73\x16\x19\x0c\x65\x4c\xa8\x2a\x91\xbc\xf4\x93\xd9\x72\xbc\x70\x8b\xa2\xa0\x32\xa1\x52\x54\x6a\x0c\xa8\xcd\xe4\x00\x1f\x52\xee\xe0\x85\x96\x5e\xf5\x61\x9e\x42\x2b\xa4\x42\xed\xe6\xe6\x5d\x7b\x15\x0c\x6b\x6f\xda\x81\x6b\x1d\x32\xf5\x2b\x26\x54\x05\xf5\x8f\x31\x8a\x09\x67\x24\x5d\x8d\x41\x28\x29\x14\x4f\xe6\x5e\x7e\x1b\x9a\x67\xb1\x7e\x72\x57\x58\x61\xd0\x17\xd2\xf5\xb0\x6c\x54\x81\x42\xab\xe1\x28\x32\x5c\x0f\xc9\x5f\x8c\x22\x4d\x50\x57\x95\xe4\xd3\x01\x6a\x2d\x51\x98\xc1\xdf\x64\x94\xc6\xdf\xc3\xd1\x24\x62\x07\xbb\x85\x19\x8c\xd2\x42\x8a\xe2\xb9\x63\xe4\x5b\x4a\x00\x51\xc2\xf0\x7a\xc8\x53\xa4\xb6\xe2\x38\x4a\x85\x1b\x12\x4a\x46\x1d\x00\xc0\x72\x6c\xac\x9a\xc4\xf6\x26\x7e\x6b\xcb\x4b\x98\xc2\x7e\xac\xa1\x96\x2b\x74\xc3\x41\xc8\x59\x0a\xc5\x86\x04\x19\x50\x32\x4a\x29\xa2\x1d\x0e\x7c\xcc\x60\x34\xd9\x4b\x1d\x58\x7e\x98\x42\xa3\x18\x2f\x85\xe2\x6c\x3f\xf1\xab\x50\x4c\xbf\xfa\x75\xa6\x5e\x76\x1a\x53\xfa\xcf\xa1\x9a\x4d\xe0\xf4\xff\xf3\x6c\x6b\x61\xce\xc4\x0b\x14\x92\x3a\x37\x25\xbb\x75\x21\xde\xda\xbc\xd4\x76\x01\x0b\x8e\xb5\x66\x53\x62\xb4\xc3\xd0\x0d\x90\xb7\x8e\xc5\xa0\x68\x9f\xff\x9f\xb4\xa5\xc8\x59\x6c\x86\x4a\x8f\x41\x3e\xcc\x2f\xf6\x6c\x27\x3b\x47\xdb\x35\xc2\x30\x84\x72\x99\x92\xdb\x1b\xb3\x24\xb3\x07\xcd\x78\x9e\x61\x7d\x06\x44\x1b\xd4\x64\xf6\xed\xf1\xfe\x0d\xcc\xd7\x96\xe9\x5e\x57\xee\x7d\xd4\x5d\x58\xf4\x23\x60\x9e\x75\x2a\xfd\xc8\xde\x0c\x72\x9c\x6b\xb6\xea\xa0\xeb\x35\x58\xaa\x2a\x0e\xd7\xfe\x54\x80\xf1\x14\x52\x3f\x05\x07\x9b\xcd\x41\x5e\xbb\x75\x6e\xbd\xf6\x6b\x9b\xfa\xbc\x2f\x1c\x36\x9b\x83\x76\xfa\x27\x6d\x1c\x67\xb0\xd9\xbc\x52\xab\x84\xaa\xd6\x6b\xe0\xd2\x79\x9c\x6b\x8a\x82\x3b\xe7\x3b\x14\x6b\xe3\xe2\x08\xf3\xf9\xed\x6e\x80\xec\x4f\xd8\xa7\x66\x87\x1d\x00\x39\x0d\x65\x32\x25\x99\xd7\x9c\xad\xd7\x90\x3e\xd0\x05\x0f\xb1\x7b\x8d\x3c\xa3\x47\x54\xd9\x31\xd7\x5b\xe4\x9e\xe9\xdb\xe3\xbd\x67\x85\x76\x13\x4c\xc9\x3f\x73\x49\xd5\x73\x9b\xa5\x1d\xfb\x5c\x92\x63\x13\x8f\x86\x01\xf6\x0b\x3c\x1c\xd7\xb6\x51\xe4\x98\x25\xca\x8d\xb0\x39\x2a\x98\xa3\x4a\x96\x2e\x7c\x18\x2f\x69\x23\x91\x9c\xb3\x2a\xb3\x8d\x0a\xed\xb8\x72\x7f\xfc\xee\x3b\x1d\x32\xdd\x20\x99\xe5\xce\x50\xb5\x65\xae\xe4\xca\xd4\xa2\xd0\x0a\x76\xbf\x92\x52\x48\x4e\x66\x79\xe6\x71\x33\x68\xc3\x4e\xbc\xf8\xbf\x24\x72\x6b\x3f\x23\x91\x5b\xdb\x2b\x31\xcf\x98\x78\xe9\x59\xa2\x58\x9f\xa7\x78\x31\x7b\xd0\x8a\xe7\x99\xe8\x0b\x0a\x45\xfc\xd9\x92\xe0\xff\x42\xfa\x84\x14\x1b\x07\xe4\x09\xb5\x31\x9c\x91\x5e\x09\xf3\x06\x51\x2b\xf0\xa7\x1d\x0d\x47\x40\x9f\x7f\x0e\xa9\x45\x72\xc6\xfd\xb8\x21\xc9\xec\xc9\xa3\xf2\xac\x65\xfc\x88\x0d\x17\x6a\xd0\xe6\x9c\x84\x76\xe7\x7b\x05\xda\x9c\x13\xd0\xe7\x4c\x7b\xca\xf4\x1a\x73\xa9\x2c\xcb\x5d\xb3\xe0\xef\x7a\xf3\x18\x60\x6f\x6a\x3b\x67\xcf\xa5\x4a\x8c\x9f\xcc\x7b\x0e\x85\x19\xbf\x2d\xe3\xb4\xee\x2e\xad\xc7\xfd\xeb\xa2\x2f\xe6\xe4\xce\x3b\xae\xe6\xbe\x79\x52\xc6\xde\x75\xf7\x8e\x31\x68\x2f\xcc\xd3\x89\x9d\x88\x44\xe6\x5f\x70\x7e\x33\x4f\xc9\x4f\x47\x67\x61\x3c\x4f\x7f\x93\x8d\x43\x6e\xd3\x3b\xb5\x0a\x97\x58\xdc\x41\xa7\xbe\xf4\x2a\x0e\xbb\x85\x4a\x79\xd9\x86\x81\x3b\x29\xfb\x17\xa4\xdf\xf4\xb3\x12\xa9\xc5\x0f\x48\xd4\xe6\x32\x85\xda\x7c\x27\x81\x0f\x1a\x77\x97\xfa\x25\x12\x43\x39\x5f\xa2\x31\xb0\x7e\x27\x91\x1f\x52\xd8\x6e\xfd\x4b\x24\xb6\xbb\xff\x63\x1a\x0f\xeb\xf6\xe8\x25\xd6\xbd\xbd\xf2\x2c\xbc\x36\xc3\x93\x35\xf3\xf2\x66\x57\xf1\x1a\xfa\x2f\x00\x00\xff\xff\x59\x43\x01\xdb\x70\x0e\x00\x00")

func assetsTemplatesClusterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesClusterHtml,
		"assets/templates/cluster.html",
	)
}

func assetsTemplatesClusterHtml() (*asset, error) {
	bytes, err := assetsTemplatesClusterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cluster.html", size: 3696, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesDemoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xd1\x72\xdb\x36\x10\x7c\xf7\x57\x5c\xf0\xe8\x96\x44\x64\xc9\x95\xdb\x92\x9a\x71\x24\xd7\x96\xd3\xc4\xae\x25\x3b\x71\xdf\x20\xe0\x44\x82\x26\x00\x1a\x38\x52\x62\xbf\xbe\x43\xd1\x6e\xa2\x4c\xea\x49\x66\xf2\x44\xec\xf2\x6e\x17\xb8\x05\x99\xbc\x9a\x5d\x4d\x97\xf7\xd7\x67\x90\x93\x29\x27\x07\x49\xf7\x80\x52\xd8\x2c\x65\x68\xd9\xe4\x00\x20\xc9\x51\xa8\x6e\x01\x90\x18\x24\x01\x32\x17\x3e\x20\xa5\xac\xa6\x75\x74\xc2\x3e\x7f\x95\x13\x55\x11\x3e\xd6\xba\x49\xd9\xc7\xe8\xf6\x34\x9a\x3a\x53\x09\xd2\xab\x12\x19\x48\x67\x09\x2d\xa5\x6c\x7e\x96\xa2\xca\x70\xaf\xd3\x0a\x83\x29\x6b\x34\x6e\x2a\xe7\xe9\xb3\xe2\x8d\x56\x94\xa7\x0a\x1b\x2d\x31\xda\x81\x9f\x41\x5b\x4d\x5a\x94\x51\x90\xa2\xc4\x74\xf0\x2c\xf4\x2a\x8a\x60\x99\x23\x88\x95\x6b\x10\x86\xb0\x13\x26\x91\x05\x38\x34\x75\xa0\x43\x90\xce\x20\xac\xb5\x0f\x04\xda\x02\xe5\x08\xdd\xd9\x7e\x07\x61\x5b\x70\x94\xa3\xdf\xe1\x67\x6f\xe8\x9a\xfa\x9e\x43\xb1\x26\xf4\x87\x5d\x4b\xc0\x5e\x32\x8a\x26\x07\xbd\x2d\x69\x2a\x71\x32\x75\xf2\xc1\x3b\x21\xf3\xd9\x1b\x98\xa1\x71\x09\xef\xf9\xa7\xa2\x52\xdb\x07\xf0\x58\xa6\x2c\x50\x5b\x62\xc8\x11\x89\x41\xee\x71\x9d\xb2\x6e\x6a\xe1\x37\xce\x8d\xd8\x4a\x65\xe3\x95\x73\x14\xc8\x8b\xaa\x03\xd2\x19\xfe\x1f\xc1\x87\xf1\x30\x1e\x73\x19\xc2\x27\x2e\x36\xda\xc6\x32\x04\x06\xda\x12\x66\x5e\x53\x9b\xb2\x90\x8b\xe1\xc9\x28\x7a\x73\x77\xaf\xf5\x62\xfe\x07\xbe\x1d\xa8\x73\x73\x79\x73\xfa\xd0\xca\xfa\xe2\xf4\xe2\x26\x1b\x1e\x5d\x99\x5b\xb9\xd9\x8c\x9d\x1d\xde\xdc\xab\x6c\x74\x27\x7e\xba\x36\x8b\x65\xf8\x87\xbf\xfd\xe5\xa4\x59\xa9\xb3\x22\x1f\xd5\x0c\xa4\x77\x21\x38\xaf\x33\x6d\x53\x26\xac\xb3\xad\x71\x75\x78\x1e\xf8\x4b\x87\xda\xed\x52\xa1\x71\xfd\xe6\x5e\x10\x4a\x78\x7f\xc3\xba\xe5\xca\xa9\xf6\x49\xdc\xba\x20\xbd\xae\xa8\x87\x00\xf7\xae\x06\x8b\xa8\x80\x1c\xa0\x15\xab\x12\xe1\x52\x34\x62\xb1\x2b\xea\x48\x5f\x77\x99\xea\x00\xa2\xaa\xe2\x5e\x83\xef\x8b\x24\x4a\x37\xa0\x55\xca\xbc\x73\xc4\x26\x09\x57\xba\x79\x0e\xa8\xaf\x83\xe0\xe5\xa7\x40\x44\x21\xb6\x71\xe6\x5c\x56\xa2\xa8\x74\xd8\x85\xd1\x71\xbc\xd4\xab\xc0\x8b\xc7\x1a\x7d\xcb\x07\xf1\xe0\x28\x1e\x3d\xa1\x5d\x1a\x45\xe8\xb4\xf7\x8c\xbf\xa6\xfe\xad\x71\x17\x5f\xa6\x5d\x7c\x35\xec\xa5\x3c\x9e\xff\xa5\x57\xaf\x8f\xc6\x8f\x4d\x5b\x2c\xde\xad\x2f\x8a\xab\x77\xe2\xcf\x87\x75\xfd\xe1\x6e\xfb\xf7\xf6\xf6\xda\x4e\x2f\x4f\xc7\xe5\x91\x99\x7e\x78\x3f\xaf\xce\x7f\x35\xe7\xd3\xd9\xc9\xe6\xfc\xfd\x5c\x5e\xcf\xc6\xcb\xad\xf8\xff\x8c\xbe\xe1\x2c\x52\xd9\x22\xc4\xb2\x74\xb5\x5a\x97\xc2\xe3\x17\xa3\xf2\x28\x24\xf1\xc1\x71\x7c\x1c\x8f\x7a\xf0\x3d\x83\xfa\x6e\xf1\x48\x39\xf3\xc3\x0d\x5e\xc7\x83\x61\x3c\xe4\x97\x8b\x8f\x4b\x2f\x6c\x58\x3b\x6f\xd0\xbf\xe0\x40\x6d\x85\x29\x23\xdc\x12\x2f\xc2\x96\xf5\x8e\x5d\x98\xbb\x8f\xa2\xa3\xf6\x1a\x13\xde\xdf\xfd\x84\xf7\x7f\xe2\x7f\x03\x00\x00\xff\xff\x60\xc4\xfb\x1b\x9a\x05\x00\x00")

func assetsTemplatesDemoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesDemoHtml,
		"assets/templates/demo.html",
	)
}

func assetsTemplatesDemoHtml() (*asset, error) {
	bytes, err := assetsTemplatesDemoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/demo.html", size: 1434, mode: os.FileMode(420), modTime: time.Unix(1497030997, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesErrorHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xdb\x38\x10\x3d\xaf\x7f\xc5\x84\x7b\x5d\x8a\x70\xf6\xb2\x07\x4a\xc0\xb6\xc8\xa1\xf7\x16\xe8\x75\x44\x8e\x24\xba\x14\xa9\x90\x23\x25\x46\x90\xff\x5e\xd0\x92\x1d\x27\x48\x81\xa0\xe8\xc1\xa0\x1f\x39\xf3\xe6\xeb\x8d\xf4\x8d\x8d\x86\x8f\x13\xc1\xc0\xa3\x6f\x76\xba\x1c\xe0\x31\xf4\xb5\xa0\x20\x9a\x1d\x80\x1e\x08\x6d\xf9\x03\xa0\x47\x62\x04\x33\x60\xca\xc4\xb5\x98\xb9\x93\xff\x89\xeb\xa7\x81\x79\x92\x74\x3f\xbb\xa5\x16\xdf\xe5\xb7\xff\xe5\xe7\x38\x4e\xc8\xae\xf5\x24\xc0\xc4\xc0\x14\xb8\x16\x5f\xee\x6a\xb2\x3d\xbd\xf2\x0c\x38\x52\x2d\x16\x47\x0f\x53\x4c\x7c\x65\xfc\xe0\x2c\x0f\xb5\xa5\xc5\x19\x92\x27\xf0\x0f\xb8\xe0\xd8\xa1\x97\xd9\xa0\xa7\x7a\x2f\x9a\xdd\xca\xc4\x8e\x3d\x35\x96\xc6\x08\x94\x52\x4c\x5a\xad\x37\xdb\xb3\x77\xe1\x07\x24\xf2\xb5\xc8\x7c\xf4\x94\x07\x22\x16\x30\x24\xea\x6a\xa1\x94\xb1\xe1\x90\x2b\xe3\xe3\x6c\x3b\x8f\x89\x2a\x13\x47\x85\x07\x7c\x54\xde\xb5\x59\xf1\x83\x63\xa6\x24\xdb\x18\x39\x73\xc2\x49\xfd\x5b\xed\xab\xbd\x32\x39\xab\xcb\x5d\x65\x72\xbe\x64\x93\x4d\x72\x13\x43\x4e\xe6\x03\xf4\x87\xfb\x99\xd2\x51\xdd\x9e\x38\x57\x50\x8d\x2e\x54\x87\x2c\x1a\xad\x56\xaa\xe6\x37\x78\x7f\x95\xf6\xe1\x3a\xeb\xd7\x41\x3e\xd0\xac\x52\xb4\xa5\x0e\x67\xcf\x5b\xc9\x00\x5a\x9d\x85\xa2\xdb\x68\x8f\x5b\xb2\x01\x17\x30\x1e\x73\xae\x45\xc0\xa5\xc5\x04\xeb\x21\x37\xf7\x33\xec\xdc\x23\x59\xc9\x71\x12\x90\xa2\xa7\x93\xb5\xeb\x91\x5d\x0c\x9b\x4e\x00\xb4\x75\x17\xb2\xa2\x0f\x74\x81\x92\xec\xfc\xec\xac\x68\x76\x7f\xe9\x1b\x29\xe1\x53\xc2\x60\xa1\xfc\x38\xf6\xbd\x27\xe8\x89\xa1\x4f\x71\x9e\xc8\x42\x17\x13\xb4\x54\xfa\x01\x63\x6c\x9d\x27\xb0\x2e\x4f\x1e\x8f\x20\x65\x21\xb8\xe2\xdf\xd2\x2a\x25\x51\x2a\xec\xa5\xac\x99\x39\x06\x28\xeb\x52\x8b\x15\x88\x37\xf6\x6b\x50\x01\x16\x19\x37\x50\x72\xf5\x1e\xa7\x7c\xb9\xc6\xd4\x97\xf5\xf9\xbb\xcd\x92\x1e\x71\x9c\x3c\xc9\xcd\xfd\x6c\x29\xf7\x6b\xc8\x32\xed\x09\xc3\x39\x48\x4e\x32\x06\x7f\x14\xcd\xd7\xb5\xb6\x97\x1e\x69\x55\xec\xde\xf3\x71\x26\x06\xd9\x62\x3a\x4d\xf8\x4f\xdb\x68\xb5\xb6\x61\x05\xf8\xa6\x19\x6d\x99\xc5\x45\x33\xe2\xb4\x98\x5a\x61\xe9\xb4\xb2\x6e\xb9\x8c\xf5\x05\x68\x15\x70\x39\x2b\xf0\xbd\x69\xbf\x68\x61\xb8\x6d\x9e\x9e\xaa\xbb\xb2\xe6\xcf\xcf\x5a\x0d\xb7\x67\x86\x8d\x4c\xab\x55\x85\x5a\xad\x5f\xb6\x9f\x01\x00\x00\xff\xff\xe4\xaf\x29\x5d\xea\x04\x00\x00")

func assetsTemplatesErrorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesErrorHtml,
		"assets/templates/error.html",
	)
}

func assetsTemplatesErrorHtml() (*asset, error) {
	bytes, err := assetsTemplatesErrorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/error.html", size: 1258, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe4\x34\x10\x3d\x33\xbf\xa2\xd6\x7b\x1d\xc7\x1a\xb8\x70\x70\x22\xc1\x80\xc4\x5e\x16\xb4\x1a\x24\xae\x95\xb8\x3a\xf1\xe0\xd8\x19\xbb\xd2\x33\xad\x28\xff\x1d\xb9\x93\xfe\x5c\x58\x5a\xb0\x87\x51\x52\x4e\xf9\xbd\x7a\xaf\xca\x9e\xd6\xef\x4c\x68\x78\x37\x10\x74\xdc\xbb\xea\x4e\xe7\x07\x38\xf4\x6d\x29\xc8\x8b\xea\x0e\x40\x77\x84\x26\xbf\x00\xe8\x9e\x18\xa1\xe9\x30\x26\xe2\x52\x8c\xbc\x91\xdf\x8b\xf3\x4f\x1d\xf3\x20\xe9\x65\xb4\xdb\x52\xfc\x21\x7f\xff\x41\x3e\x86\x7e\x40\xb6\xb5\x23\x01\x4d\xf0\x4c\x9e\x4b\xf1\xe1\xe7\x92\x4c\x4b\x17\x3b\x3d\xf6\x54\x8a\xad\xa5\xd7\x21\x44\x3e\x4b\x7e\xb5\x86\xbb\xd2\xd0\xd6\x36\x24\xf7\xc1\x3d\x58\x6f\xd9\xa2\x93\xa9\x41\x47\xe5\x83\xa8\xee\x16\x24\xb6\xec\xa8\x9a\xa6\xe2\x29\xbf\xcc\xb3\x56\xcb\xca\xfa\xd9\x59\xff\x27\x44\x72\xa5\x48\xbc\x73\x94\x3a\x22\x16\xd0\x45\xda\x94\x42\xa9\xc6\xf8\xe7\x54\x34\x2e\x8c\x66\xe3\x30\x52\xd1\x84\x5e\xe1\x33\xbe\x29\x67\xeb\xa4\xf8\xd5\x32\x53\x94\x75\x08\x9c\x38\xe2\xa0\xbe\x2b\x1e\x8a\x07\xd5\xa4\xa4\x8e\x6b\x45\x93\xd2\xb1\x9a\xd4\x44\x3b\x30\xa4\xd8\xdc\x00\xff\xfc\x32\x52\xdc\xa9\x6f\xf7\x98\x4b\x50\xf4\xd6\x17\xcf\x49\x54\x5a\x2d\x50\xd5\x7f\xc0\xfd\xa7\xb2\x9f\xcf\xab\xbe\x24\xb9\xc1\xac\x2c\xda\xd0\x06\x47\xc7\xab\x64\x00\xad\x0e\x83\xa2\xeb\x60\x76\x6b\xb1\x1e\xb7\xd0\x38\x4c\xa9\x14\x1e\xb7\x35\x46\x58\x1e\x72\xdd\x7e\x08\x37\xf6\x8d\x8c\xe4\x30\x08\x88\xc1\xd1\x3e\xdb\xb6\xc8\x36\xf8\x75\x4e\x00\xb4\xb1\x47\xb0\x3c\x1f\x68\x3d\x45\xb9\x71\xa3\x35\xa2\xba\xfb\x46\xbf\x93\x12\x7e\x8c\xe8\x0d\xe4\x3f\x0e\x6d\xeb\x08\x5a\x62\x68\x63\x18\x07\x32\xb0\x09\x11\x6a\xca\x7e\x40\x1f\x6a\xeb\x08\x8c\x4d\x83\xc3\x1d\x48\x99\x01\xce\xf0\xd7\xb2\xb2\x24\x8a\x19\x3d\xcb\x1a\x99\x83\x87\x7c\x5c\x4a\xb1\x04\xe2\x2a\x7f\x21\x15\x60\x90\x71\x0d\x72\xad\xce\xe1\x90\x8e\xcb\x18\xdb\x7c\x7c\xde\xd7\x49\xd2\x1b\xf6\x83\x23\xb9\x6e\x3f\x64\xca\x87\x85\x32\x77\x7b\x40\x7f\x20\x49\x51\x06\xef\x76\xa2\x7a\x5a\xb4\x9d\x3c\xd2\x2a\xe7\xfd\xdd\x1e\xdb\x04\x2f\x6b\x8c\xfb\x0e\x7f\xed\x1c\xad\x16\x1b\x96\x00\xaf\xcc\xa8\x73\x2f\x8e\x33\x23\x2a\x43\x7d\xd0\x0a\xb3\xd3\xca\xd8\x6d\x75\xb7\xf6\xec\x31\x38\x47\x0d\x03\x77\x7b\x49\x90\x47\x2f\xdd\xe7\x6e\xf5\xe9\x7e\xdf\xcb\xc0\x1d\xc5\xc3\x9d\xb0\x6f\xe3\xde\x5b\xeb\xdb\xcf\x3b\x77\xf0\x10\xae\x3c\x15\x60\x4d\x29\xfe\xdd\x73\x3d\xba\x33\x1d\x07\x14\x8f\xdb\x43\x4b\xa6\x09\xec\x06\x8a\x47\x37\xa6\x3c\x49\xf3\xbc\xba\xe5\xec\xf2\x85\x5e\xa0\xf8\x0d\x5b\x02\xf1\x31\x18\x4a\x02\xe6\xf9\x00\x88\x0d\xdb\x2d\x89\x69\x22\x6f\xe6\xb9\xd2\x78\x32\xa7\x59\xe0\xb2\x3f\x5a\x39\x7b\xe2\x22\x6f\x8e\x1c\x2b\x75\xc6\x3d\xe7\x85\x6b\xe2\x5f\x6c\xe2\x10\x77\x99\xfa\x9a\x79\xc5\x3b\xe3\xf6\xc1\x90\x9a\xa6\x05\xb6\xf8\x88\x7d\xc6\x16\xd5\x45\xf7\x5b\xb7\x1b\xba\x3c\x02\x70\x7c\x93\x06\x53\x57\x07\x8c\xe6\x38\x12\x70\x8d\x72\xb3\x9a\x4f\xa3\xff\xa2\xa0\x35\xe7\x7f\x08\x52\x71\xf4\xc7\xc5\x4f\xa3\x2f\x3e\xfc\x74\x9b\xcc\x7c\x3f\x9c\x14\xe6\x42\xdf\x7f\x06\x73\x8b\xce\x4b\x31\xbf\x8e\x3c\x8c\x2c\x2e\x44\x5f\x2a\x3b\x09\xba\xa1\xc8\x8d\x75\x74\xd9\x86\xa7\xfc\x4f\xfd\xcb\x95\x69\x35\xba\xd3\x61\x5c\xef\xd8\x53\xa0\x95\xc7\xf5\x75\x9a\x8a\xc7\xe5\xf0\xcd\xf3\xfe\xaa\x5f\x6e\x78\xad\x96\x5f\x0d\x7f\x05\x00\x00\xff\xff\xce\x2e\x8e\x1e\x46\x08\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 2118, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLogHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xcd\x6a\x84\x30\x14\x85\xf7\x79\x8a\x83\x5d\x37\x82\x4b\x9b\xba\xea\xa6\x50\x2c\x0c\xf3\x02\xd1\x5c\x34\x8c\x93\x84\x98\x38\x88\xe4\xdd\x87\x84\xf9\x59\xde\xef\xbb\xe7\x1c\xb1\x86\x7d\xa1\x8e\x01\x7c\xb4\x26\x48\x6d\xc8\xe3\x60\xc0\x4d\xab\x30\xb7\x90\x31\xd8\x2f\x06\x24\x06\x38\x4f\x45\x0d\x72\xbc\x4c\xde\x46\xa3\x5a\x18\x6b\x28\xfb\xc1\x7a\x45\xfe\x7d\x27\x26\xea\x47\xb5\x50\x7a\xc3\xb8\xc8\x75\xfd\xae\x5e\x1b\x55\x9e\x14\x73\xd3\x1d\x07\x78\x6f\x15\xf1\x5e\x5e\x09\x29\xe1\xe3\x49\x4e\xd1\xf0\xdf\x9f\x8c\x3e\x91\xd9\x79\x77\xf9\x41\xd4\x73\x53\xc2\xce\x53\x49\xff\xd9\xe9\x3f\x06\x17\x43\x91\x99\x32\x51\x2b\xbd\x75\xec\x1e\x00\x00\xff\xff\x0c\x02\x65\x26\xdd\x00\x00\x00")

func assetsTemplatesLogHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLogHtml,
		"assets/templates/log.html",
	)
}

func assetsTemplatesLogHtml() (*asset, error) {
	bytes, err := assetsTemplatesLogHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/log.html", size: 221, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNodeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\x94\xa0\xb6\x0f\x96\x72\xd9\x8b\x57\x16\x50\x6c\x7b\x58\x60\x11\x04\xd9\x43\x81\x16\x3d\xd0\xe2\xd8\x22\x56\x26\x59\x72\x94\x0f\x18\xfa\xef\x05\x29\x4a\x56\x64\x69\x9d\xa4\x29\x02\x38\xe2\xf0\x71\xf8\xf8\x48\xbe\x61\x6a\xe9\xb9\xc4\x6c\x06\x40\x1c\xb4\x41\x38\xce\x00\x00\xb8\xb0\xba\x64\xcf\x6b\x10\xb2\x14\x12\x3f\xfb\xe0\x96\xe5\x3f\xf6\x46\x55\x92\xaf\x41\xaa\x2e\xaa\x0c\x47\xd3\x8f\x68\xc6\xb9\x90\xfb\x35\xdc\x34\xed\x5c\x95\xca\xac\xe1\xea\xe6\x26\x04\x1e\x0b\x41\xb8\xb2\x9a\xe5\xb8\x76\x93\xae\x1e\x0d\xd3\xae\xab\x9e\x39\x22\x45\x20\xd1\x9f\xef\x6a\xf7\xc9\xfd\x75\xa0\x58\x2a\x8e\x2b\x55\x91\xae\x28\xc0\x0f\xcc\xec\x85\x5c\x91\xd2\x6b\xf8\xa4\x9f\x3a\xe8\x95\x83\x9a\x4a\x5a\x20\xb3\x2e\xd4\x03\x9a\x30\x20\xaf\x8c\x75\xc4\xb4\x12\x92\xd0\x34\x03\xd2\x24\x28\x92\xda\xdc\x08\x4d\x4e\x9a\xeb\xc5\xae\x92\x39\x09\x25\x17\xcb\x30\xf6\x7a\x11\xfd\xc5\x19\xb1\x15\xa9\xfd\xbe\xc4\xcd\x9c\x94\x2a\x49\xe8\xf9\xdf\xd1\x32\x0e\xdf\x8b\xe5\xe7\x80\x9d\xf7\x39\xcc\x97\x71\x5e\x8a\xfc\xc7\x29\x29\xb6\x59\x01\x1e\x85\xe4\xea\x31\x2e\x55\xce\x5c\x57\x5c\x18\xdc\xc1\x06\xae\x17\x18\x13\x33\x7b\xa4\x65\xac\x99\x41\x49\x76\x31\xf7\xa9\x76\x42\xf2\x45\x44\x1c\x58\xb4\x8c\x19\x91\x59\xcc\xdd\x98\xf9\xd2\x27\xac\x3d\x05\xf7\x9b\x26\xed\x7a\x52\x2e\x1e\x20\x2f\x99\xb5\x9b\x28\x57\x92\x98\x90\x68\x22\xb7\xce\x74\xa7\xcc\x01\x0e\x48\x85\xe2\x9b\x48\x2b\x4b\x3e\x0c\x90\x12\xdb\x96\xd8\x0e\x6a\x1a\xfe\x77\x95\x2b\xc9\x51\x5a\xe4\x01\xe9\xb0\xa6\xfd\x74\x8d\x22\xfb\xa2\x0e\x07\x26\x79\x9a\x50\xd1\xef\xe0\x59\xaa\x0d\x66\xc7\x23\xc4\xb7\x8a\x63\x1c\x60\x50\xd7\x69\xe2\x3a\xd2\x84\x78\x97\x33\x39\x25\x3d\xcb\xff\x4d\xe5\xac\x14\xf4\x7c\x69\x82\x16\xf7\xf6\x19\x7e\x25\x32\xf6\x52\x7a\x0f\x7a\x7b\xee\xef\xc4\x55\x45\x97\x92\x37\xa8\x77\x65\x47\x63\x5e\x91\x1d\x8d\x79\x4f\x76\x46\xd5\x88\x30\x5d\x03\xe0\x78\x04\xb1\x03\xfc\xa7\x9b\xc9\x8d\x80\xe8\x3b\x29\xad\x91\x47\x50\xd7\x3d\x30\x40\xba\xad\x88\x94\x04\x77\x10\x99\xbf\x1c\x9b\x28\x71\x77\x27\xe9\xc8\xde\xb2\x03\x42\x5d\x27\x96\x98\xa1\xa8\x3d\x93\x5b\x92\xb0\x25\xb9\x7a\xb2\xfe\x9f\xad\xf2\x1c\xad\x8d\x1c\x45\x43\x69\xd2\xa4\x1d\x10\xc3\xd2\xe2\x7f\x22\xa0\xf4\xd4\xfc\x9c\xc9\xbd\xbb\x54\x6e\x9d\x63\xb3\x4f\x0a\x73\xc7\x2a\x3b\xa2\xcb\x9b\x88\x19\xb4\xd5\x01\x2f\x4a\x73\xef\x61\x93\xec\xc6\xd4\x79\x13\x0d\xed\x96\x72\x49\x20\xbf\xde\x69\x0e\xde\x0f\x66\x3f\x8b\xbd\xfe\x12\xe7\x24\x1e\x10\x1c\xd7\x57\x9c\xd8\x70\xa7\x9b\x31\xc3\x33\xd2\x33\x50\x5f\x86\x4c\x25\xa3\x6c\x28\x14\x03\xe7\xc3\xd3\x9b\x54\xc9\x53\xb0\x99\x27\xfe\xfa\x1b\xd4\x75\x94\x5d\x8d\xc6\xd3\x84\x65\x30\xe8\x81\xba\xfe\x45\x6e\xad\xfe\xdc\xff\x3d\x27\x32\xb1\x05\xb8\x63\x55\x49\xd1\x3b\x79\x26\xd6\x7b\x52\x94\xa5\x56\x33\xd9\xce\xb1\x2f\x9f\x75\x21\x72\x25\xa1\xfb\x5a\xed\x44\x89\x51\x96\x26\x0e\x97\x81\x0d\x86\xc7\x46\x14\xfb\xdf\x88\xa2\x31\xef\x21\xea\xbd\x73\x40\x34\x4d\xb8\x78\x78\x8d\x93\x88\xec\x56\x49\x4c\x13\x31\x04\xbf\xee\x00\x1f\x8f\x70\xed\x56\x0a\xeb\x4d\xb3\xa8\x76\x50\x9a\xf8\xd2\x9b\xcd\x2e\x94\xe6\xe6\x61\x86\x3c\x34\xfd\xcb\x27\x02\xc1\x9b\x43\xeb\x1e\x23\xd3\x35\xfb\xbe\x92\xc3\x4b\x52\x64\x77\xe2\xac\x88\x17\xd9\xef\x4f\x82\xc0\x8e\x16\x82\xa2\x71\x5f\x1c\x19\x15\xfc\xff\xbc\xe3\x9b\xda\xbf\xc8\x33\x54\xc4\x09\xe1\x77\xbc\x55\xa5\xdd\xff\x13\xc6\x38\x6b\x09\x9d\xf7\xee\xc9\xd5\x17\x9b\x4c\x2b\x55\x73\xcf\xa5\x22\x88\x03\xcd\xf8\xab\xfd\x13\x8d\x82\xba\x0e\x1e\x10\x58\x9e\xe2\x42\xee\xd4\x69\xbb\x1b\xd4\x9e\x20\xfe\x83\x09\x6a\x1c\x3c\x76\x7a\x04\x33\xbf\x81\xba\x6e\x7c\xee\x34\x26\xb8\x6f\x77\x0c\xce\x3f\x5e\x38\x89\xaf\xd5\x67\x4e\x72\x52\xa1\x77\xee\xfb\xe6\xd1\x19\x46\xff\x70\xb5\xf9\x1c\xe0\xcb\x81\xc7\x77\x46\x39\x2a\xf1\x9d\x68\x1e\x5d\xe7\xc8\x91\x82\x15\xf4\x1a\xe8\x32\xb8\xc9\x6e\x86\x71\x49\x06\xd0\xe9\x32\x33\x7a\x79\xc6\x6b\xc2\xc4\x1a\x7f\xb6\xb9\x6d\xb0\xaf\xfb\xc5\x34\x83\x35\x37\x69\x7c\xf0\x52\x9a\x97\xbe\xf0\x56\x9b\x9b\xde\xed\x0f\xb6\xe0\x0f\x66\xf6\x61\x9e\xfb\x52\xd2\x81\x23\xf4\x8e\x43\x67\x8c\xee\xd3\x3d\x50\xb2\x59\x30\xeb\x7f\x03\x00\x00\xff\xff\x02\x32\x14\x63\xe6\x0e\x00\x00")

func assetsTemplatesNodeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNodeHtml,
		"assets/templates/node.html",
	)
}

func assetsTemplatesNodeHtml() (*asset, error) {
	bytes, err := assetsTemplatesNodeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/node.html", size: 3814, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNotfoundHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xbb\x6e\xdc\x3a\x10\xad\xef\x7e\xc5\x98\xb7\x0d\x45\xac\xd3\xa4\xa0\x04\x24\x41\x8a\x74\x29\x12\x20\xed\x88\x1c\x49\xdc\x50\xa4\x4c\x8e\x64\xef\xdf\x07\x5c\x69\x1f\x36\x1c\xc0\x08\x52\x2c\xb8\x87\x9c\x39\xf3\x3a\x23\x7d\x67\xa3\xe1\xe3\x44\x30\xf0\xe8\x9b\x9d\x2e\x07\x78\x0c\x7d\x2d\x28\x88\x66\x07\xa0\x07\x42\x5b\xfe\x00\xe8\x91\x18\xc1\x0c\x98\x32\x71\x2d\x66\xee\xe4\x07\x71\xfb\x34\x30\x4f\x92\x1e\x66\xb7\xd4\xe2\xa7\xfc\xf1\x51\x7e\x8e\xe3\x84\xec\x5a\x4f\x02\x4c\x0c\x4c\x81\x6b\xf1\xf5\x4b\x4d\xb6\xa7\x67\x9e\x01\x47\xaa\xc5\xe2\xe8\x71\x8a\x89\x6f\x8c\x1f\x9d\xe5\xa1\xb6\xb4\x38\x43\xf2\x04\xde\x81\x0b\x8e\x1d\x7a\x99\x0d\x7a\xaa\xf7\xa2\xd9\xad\x4c\xec\xd8\x53\x63\x69\x8c\x40\x29\xc5\xa4\xd5\x7a\xb3\x3d\x7b\x17\x7e\x41\x22\x5f\x8b\xcc\x47\x4f\x79\x20\x62\x01\x43\xa2\xae\x16\x4a\x19\x1b\x0e\xb9\x32\x3e\xce\xb6\xf3\x98\xa8\x32\x71\x54\x78\xc0\x27\xe5\x5d\x9b\x15\x3f\x3a\x66\x4a\xb2\x8d\x91\x33\x27\x9c\xd4\xfb\x6a\x5f\xed\x95\xc9\x59\x5d\xee\x2a\x93\xf3\x25\x9b\x6c\x92\x9b\x18\x72\x32\x6f\xa0\x3f\x3c\xcc\x94\x8e\xea\xfe\xc4\xb9\x82\x6a\x74\xa1\x3a\x64\xd1\x68\xb5\x52\x35\x7f\xc1\xfb\xa7\xb4\x0f\xb7\x59\x3f\x0f\xf2\x86\x66\x95\xa2\x2d\x75\x38\x7b\xde\x4a\x06\xd0\xea\x2c\x14\xdd\x46\x7b\xdc\x92\x0d\xb8\x80\xf1\x98\x73\x2d\x02\x2e\x2d\x26\x58\x0f\xb9\xb9\x9f\x61\xe7\x9e\xc8\x4a\x8e\x93\x80\x14\x3d\x9d\xac\x5d\x8f\xec\x62\xd8\x74\x02\xa0\xad\xbb\x90\x15\x7d\xa0\x0b\x94\x64\xe7\x67\x67\x45\xb3\xfb\x4f\xdf\x49\x09\x9f\x12\x06\x0b\xe5\xc7\xb1\xef\x3d\x41\x4f\x0c\x7d\x8a\xf3\x44\x16\xba\x98\xa0\xa5\xd2\x0f\x18\x63\xeb\x3c\x81\x75\x79\xf2\x78\x04\x29\x0b\xc1\x0d\xff\x96\x56\x29\x89\x52\x61\x2f\x65\xcd\xcc\x31\x40\x59\x97\x5a\xac\x40\xbc\xb0\x5f\x83\x0a\xb0\xc8\xb8\x81\x92\xab\xf7\x38\xe5\xcb\x35\xa6\xbe\xac\xcf\xff\x6d\x96\xf4\x84\xe3\xe4\x49\x6e\xee\x67\x4b\xb9\x5f\x43\x96\x69\x4f\x18\xce\x41\x72\x92\x31\xf8\xa3\x68\xbe\xaf\xb5\x5d\x7b\xa4\x55\xb1\x7b\xcd\xc7\x99\x18\x64\x8b\xe9\x34\xe1\x7f\x6d\xa3\xd5\xda\x86\x15\xe0\x8b\x66\xb4\x65\x16\x17\xcd\x88\xd3\x62\x6a\x85\xa5\xd3\xca\xba\xe5\x32\xd6\x2b\xd0\x2a\xe0\x72\x56\xe0\x6b\xd3\xbe\x6a\x61\xb8\x6f\xbe\x61\x4f\x10\x22\x43\x17\xe7\x60\xb5\x1a\xee\xcf\x2c\x1b\xa1\x56\xab\x12\xb5\x5a\xbf\x6e\xbf\x03\x00\x00\xff\xff\x11\xbe\xda\xcb\xee\x04\x00\x00")

func assetsTemplatesNotfoundHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNotfoundHtml,
		"assets/templates/notfound.html",
	)
}

func assetsTemplatesNotfoundHtml() (*asset, error) {
	bytes, err := assetsTemplatesNotfoundHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/notfound.html", size: 1262, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesRunHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x5d\x6b\xdb\x30\x14\x7d\xae\x7f\xc5\xc5\x2d\x34\x79\xb0\xd5\x15\xf6\x92\x2a\x7e\xd8\xc7\x43\x61\x94\xb2\x3e\x0c\x36\xf6\xa0\x58\xd7\xb6\x98\x22\x19\xe9\xba\x4b\x30\xf9\xef\x43\xb2\x93\x7a\xe9\x58\xb3\x0d\x46\x20\x91\xef\x3d\x3a\x27\xe7\x98\x7b\xb9\xa7\xad\xc6\x22\x01\x20\x09\xad\x43\xe8\x13\x00\xa9\x7c\xab\xc5\x76\x01\xca\x68\x65\xf0\x26\x01\x58\x89\xf2\x5b\xed\x6c\x67\xe4\x02\x8c\x1d\x6b\xd6\x49\x74\x4f\xcf\xad\x90\x52\x99\x7a\x01\x57\xe1\x69\x97\x00\xe4\x24\x56\x1a\x81\x9a\x48\x3b\xe5\x38\xaf\x5e\x87\xcf\x01\xe8\x4b\x67\xb5\x46\x17\x81\x6b\xb1\xc9\x1a\x54\x75\x43\x0b\x78\x75\x7d\xd5\x6e\x02\xcc\x3e\xa2\xab\xb4\xfd\x9e\x6d\x17\x30\xa0\x87\xcb\x9c\x8d\x16\xb8\x2f\x9d\x6a\x29\x78\xb9\x98\x55\x9d\x29\x49\x59\x33\x9b\x47\xc6\x8b\x59\xfa\x45\x0a\x12\x19\xd9\xba\xd6\xb8\xbc\x24\x6b\x35\xa9\xf6\xf2\x6b\x3a\xcf\xc7\xf3\x6c\x1e\x09\xe7\x37\x81\x72\xa4\xe2\x52\x3d\x42\xa9\x85\xf7\xcb\xb4\xb4\x86\x84\x32\xe8\xd2\x20\xc1\x9b\xeb\x7d\xa3\xef\x41\x55\x60\x2c\x41\x7e\x67\x25\x7e\xec\x4c\xfe\x40\xc2\x11\xca\xfc\xd6\x7f\x46\x67\x61\xb7\x1b\x30\x93\xbe\x6d\xdb\x69\x9f\x70\x43\x99\x32\x95\xed\x7b\x40\xed\xf1\x70\xa5\x9e\xb0\x7e\x12\x8a\x1e\x48\x50\xe7\xf3\xf7\x9b\xfd\x11\xae\xf6\xd7\xa5\x30\x35\xba\x27\x82\x58\xf4\x5d\x59\xa2\xf7\xa1\x6a\xe4\xc0\x7a\x74\x48\x8b\xbe\x1f\x34\xf2\x3b\xb1\x0e\x17\xe1\x7c\x5f\x09\xaa\xb7\xef\x60\xb7\xe3\xac\xb9\x8e\xb6\x2b\xeb\xd6\xb0\x46\x6a\xac\x5c\xa6\xad\xf5\x14\xd3\x00\xe0\xc3\xab\x1e\x23\x19\xdf\x7b\xf8\xce\x4a\x6b\x24\x1a\x8f\x72\x44\x06\xac\x2b\x92\x33\x4e\x4d\xf1\xd6\xae\xd7\xc2\x48\xce\xa8\x89\x15\x59\xf0\xd6\x61\x31\x95\x1f\x21\xf1\x3f\x84\x1e\x67\x24\x0f\x44\x2c\x30\x1d\x93\x3e\x90\xb4\x1d\x4d\x38\x93\x33\x80\x67\xbc\x03\xea\x40\x0b\x19\x3c\xef\xbe\xe9\xaa\xfc\x03\x9a\x10\xc9\x6a\x4b\xe8\x81\x8b\xbd\xc3\x15\x19\x58\x91\xc9\x36\x3e\xfe\x48\xac\x44\xa7\x29\x85\xc6\x61\xb5\x4c\x99\xb1\x12\xd9\x71\xae\xcc\x75\x86\x3d\x8b\x96\xf9\xa8\x95\x16\xdc\xb7\xc2\xec\xf9\x6b\xbd\x6d\x1b\x55\x5a\x03\x87\x53\x56\x29\x8d\x69\xc1\x59\xc0\x15\xe0\x47\x9b\x22\xb8\x3c\x25\x14\x74\xee\x84\x50\xd0\xb9\xdf\x84\x82\xce\xfd\xb7\x50\xd0\xb9\xbf\x09\x25\xda\x3c\x35\x94\x38\xa6\x93\x54\x4e\x9c\xe5\xe3\xe6\x74\x9e\x4e\x91\x8d\xd3\xff\x92\xec\xd1\x8a\xf8\x59\x36\x36\xff\x4c\xf6\x5e\x1d\x49\x3e\xcd\xd8\x5a\xe6\xf7\xce\x86\x45\x91\xdf\xab\xd3\xd8\xc2\x06\x02\x1f\x57\xd0\x3f\x18\xf9\xf5\x4a\x1b\x6c\x0d\x5b\x8c\xab\xe2\xce\x1a\xe4\x4c\x15\x2f\x78\xe5\x2c\x2e\x9c\xb8\xa6\x58\xd8\x53\x45\xc2\x99\x54\x8f\x45\xf2\x23\x00\x00\xff\xff\x2b\xc4\xd3\x55\xe6\x06\x00\x00")

func assetsTemplatesRunHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesRunHtml,
		"assets/templates/run.html",
	)
}

func assetsTemplatesRunHtml() (*asset, error) {
	bytes, err := assetsTemplatesRunHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/run.html", size: 1766, mode: os.FileMode(420), modTime: time.Unix(1497011964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/default.css": assetsCssDefaultCss,
	"assets/css/demo.css": assetsCssDemoCss,
	"assets/js/demo.jsx": assetsJsDemoJsx,
	"assets/templates/cluster.html": assetsTemplatesClusterHtml,
	"assets/templates/demo.html": assetsTemplatesDemoHtml,
	"assets/templates/error.html": assetsTemplatesErrorHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/log.html": assetsTemplatesLogHtml,
	"assets/templates/node.html": assetsTemplatesNodeHtml,
	"assets/templates/notfound.html": assetsTemplatesNotfoundHtml,
	"assets/templates/run.html": assetsTemplatesRunHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"default.css": &bintree{assetsCssDefaultCss, map[string]*bintree{}},
			"demo.css": &bintree{assetsCssDemoCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"demo.jsx": &bintree{assetsJsDemoJsx, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cluster.html": &bintree{assetsTemplatesClusterHtml, map[string]*bintree{}},
			"demo.html": &bintree{assetsTemplatesDemoHtml, map[string]*bintree{}},
			"error.html": &bintree{assetsTemplatesErrorHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"log.html": &bintree{assetsTemplatesLogHtml, map[string]*bintree{}},
			"node.html": &bintree{assetsTemplatesNodeHtml, map[string]*bintree{}},
			"notfound.html": &bintree{assetsTemplatesNotfoundHtml, map[string]*bintree{}},
			"run.html": &bintree{assetsTemplatesRunHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

